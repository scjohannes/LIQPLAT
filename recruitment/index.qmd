---
title: "Recruitment"
format: html
execute: 
  echo: false  
---

```{r}
#| label: load-packages
#| include: false

library(ggokabeito)
library(ggplot2)
library(tidyverse)
library(lubridate)

options(
  # set default colors in ggplot2 to colorblind-friendly
  # Okabe-Ito and Viridis palettes
  ggplot2.discrete.colour = ggokabeito::palette_okabe_ito(),
  ggplot2.discrete.fill = ggokabeito::palette_okabe_ito(),
  ggplot2.continuous.colour = "viridis",
  ggplot2.continuous.fill = "viridis",
  # set theme font and size
  book.base_family = "sans",
  book.base_size = 14
)




# set default theme
theme_set(
  theme_minimal(
    base_size = getOption("book.base_size"),
    base_family = getOption("book.base_family")
  ) %+replace%
    theme(
      panel.grid.minor = element_blank(),
      legend.position = "bottom"
    )
)
```

Lorem ipsum.

```{r}
recruitment_data <- read.csv("data/recruitment_data.csv")

random_data <- recruitment_data %>%
  select(random_date) %>%
  mutate(random_date = as_date(random_date)) %>%
  arrange(random_date) %>%
  mutate(n = row_number(),
         group = "Random Selection") #random selection

uptake_data <- recruitment_data %>%
  mutate(icf_date = as_date(icddate)) %>%
  select(icf_date) %>%
  filter(!is.na(icf_date)) %>%
  arrange(icf_date) %>%
  mutate(n = row_number(),
         group = "Informed Consent")

plot <- ggplot() +
  #graphing random selection
  geom_point(data = random_data, aes(x = random_date, y = n, color = group)) +
  geom_line(data = random_data, aes(x = random_date, y = n, color = group)) +
  geom_area(data = random_data, aes(x = random_date, y = n, fill = group), alpha = 0.25) +
  #graphing uptake
  geom_point(data = uptake_data, aes(x = icf_date, y = n, color = group)) +
  geom_line(data = uptake_data, aes(x = icf_date, y = n, color = group)) +
  geom_area(data = uptake_data, aes(x = icf_date, y = n, fill = group), alpha = 0.5) +
  geom_hline(yintercept = 125, linetype = "dashed", color = "#e69f00") +
  #style
  scale_x_date(date_breaks = "1 month", date_labels =  "%b %Y", limits = c(as.Date("2024-04-29"), as.Date("2024-12-30"))) +
  scale_y_continuous(limits = c(0, 125), breaks = scales::pretty_breaks(n = 5)) +
  ylab("number of patients") +
  xlab("") +
  guides(color = guide_legend(title = NULL), fill = guide_legend(title = NULL)) + #remove legend title
  annotate("text", x = as.Date("2024-08-30"), y = 115, label = "target of consented patients", color = "#e69f00", size = 5, hjust = 0.5) #hjust 0 --> left aligned
  #theme(axis.text.x = element_text(angle = 45, hjust = 1))

plot
```

::: {layout-ncol="2"}
Lorem ipsum....
:::

